---
interface Props {
    title: string;
    details: string;
}

const { title, details } = Astro.props;

---

<div class="accordion group relative border-box">
    <button
      class="accordion_button flex w-full flex-1 items-center justify-between gap-2 p-3 text-left font-medium transition text-white hover:text-blue-400 sm:px-4"
      type="button"
      id={`${title}-accordion-button`} 
      aria-expanded="false"
      aria-controls={`${title}-accordion-content`} 
    >
      {title}
      <span class="accordion-icon">+</span> 
    </button>

    <div
      id={`${title}-accordion-content`} 
      aria-labelledby={`${title}-accordion-button`} 
      class="accordion_content hidden max-h-0 overflow-hidden px-3 transition-all duration-300 ease-in-out sm:px-4 text-white border-box"
    >
      <p class="mb-0 mt-0 max-w-full transition-[height]">
        {details}
      </p>
    </div>
</div>

<script>

  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.accordion_button');
    const accordionContainer = document.querySelector('.accordion-container'); 

    buttons.forEach(button => {
      button.addEventListener('click', (event) => {
        event.stopPropagation();

        const content = button.nextElementSibling; 
        const isExpanded = button.getAttribute('aria-expanded') === 'true';


        buttons.forEach(otherButton => {
          if (otherButton !== button) {
            const otherContent = otherButton.nextElementSibling;
            otherButton.setAttribute('aria-expanded', 'false');
            otherContent?.classList.add('hidden');
            const otherIcon = otherButton.querySelector('.accordion-icon');
            otherIcon.textContent = '+'; 
          }
        });
    
        if (isExpanded) {
          content?.classList.add('hidden');
        } else {
          content?.classList.remove('hidden');
          content.style.maxHeight = content?.scrollHeight + 'px'; 
        }
        button.setAttribute('aria-expanded', (!isExpanded).toString()); 

        const icon = button.querySelector('.accordion-icon');
        icon.textContent = isExpanded ? '+' : '-'; 
      });
    });


    document.addEventListener('click', () => {
      buttons.forEach(button => {
        const content = button.nextElementSibling;
        if (button.getAttribute('aria-expanded') === 'true') {
          button.setAttribute('aria-expanded', 'false');
          content?.classList.add('hidden');
          content.style.maxHeight = '0'; 
          const icon = button.querySelector('.accordion-icon');
          icon.textContent = '+'; 
        }
      });
    });
  });

</script>
