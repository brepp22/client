---
interface Props {
    item: string[];
}

const {item} = Astro.props;

---

<div id="list-container">
    <div id="input-wrapper">
    <input
        id="input-bar"
        class ="w-[320px] h-10 p-2 rounded-md border-gray-500 text-black font-mono"
        placeholder="type here"
    />

    <button id="list-button" class = "mt-2 p-2 rounded-md bg-gray-800 dark:bg-slate-400 text-white dark:text-black w-[125px] h-10 font-mono hover:text-blue-400 dark:hover:text-blue-900">
        Click Me!
    </button>
</div>
    <div id="list-items">
      
        {(
          item.map((i, index) => (
            <div class="list-item align-center" data-value={i}>
              <ul>{i}</ul>
                <button id="complete-btn">Completed</button>
                <button id ="edit-btn">Edit</button>
                <button id="delete-btn">Delete</button>
            </div>
          ))
        )}
      </div>
    </div>

</div>

<script>

document.addEventListener("DOMContentLoaded", function () {
  const inputBar = document.getElementById("input-bar") as HTMLInputElement;
  const listButton = document.getElementById("list-button") as HTMLButtonElement | null;
  const listContainer = document.getElementById("list-items") as HTMLElement | null;

  listButton?.addEventListener("click", function () {
    const inputValue = inputBar?.value.trim();
    if (inputValue) {
      const newItem = document.createElement("div");
      newItem.classList.add("list-item");

      newItem.innerHTML = `<ul>${inputValue}</ul>
                <button class="complete-btn">Completed</button>
                <button class="edit-btn">Edit</button>
                <button class="delete-btn">Delete</button>
            `;
      listContainer?.appendChild(newItem);
      inputBar.value = ""; 
    }
  });

  listContainer?.addEventListener("click", function (event) {
        const target = event.target as HTMLElement;
        
        if (target?.classList.contains("delete-btn")) {
            target.closest(".list-item")?.remove();
        }
   
    if (target.classList.contains("edit-btn")) {
            const listItem = target.closest(".list-item");
            const listText = listItem?.querySelector("ul");

            if (listText) {
                let currentText = listText.innerText;
                if(currentText.endsWith(('✅'))){
                    currentText = currentText.slice(0, -1);
                    }
                const inputField = document.createElement("input");
                inputField.type = "text";
                inputField.value = currentText;
                
                listText.replaceWith(inputField);

                inputField.addEventListener("blur", function () {
                    listText.innerText = inputField.value; 
                    inputField.replaceWith(listText); 
                });
                inputField.focus();
            }
        }

        if (target.classList.contains('complete-btn')) {
        const listItem = target.closest(".list-item");
        const listText = listItem?.querySelector('ul');
        
        if (listText) {
            if (!listText.innerText.endsWith('✅')) {
                listText.append(' ✅');
            } else {
                listText.innerText = listText.innerText.slice(0, -1);
            }
        }
    }
    });
});

</script>

<style>
    #list-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    }

    #list-items{
        font-family:monospace;
        font-size: 18px;
        padding: 20px;
    }

    :global(.list-item).list-item {
    margin-bottom: 10px; /* Adjust spacing as needed */
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

    :global(.complete-btn) {
        background-color: green;
        color: white;
        padding: 5px 10px;
        font-size: 12px;
    }   

    :global(.edit-btn){
        background-color: blue;
        color:white;
        padding: 5px 10px;
        font-size: 12px;
    }
    :global(.delete-btn){
        background-color: red;
        color:white;
        padding: 5px 10px;
        font-size: 12px;
    }
</style>